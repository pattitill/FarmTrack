// <auto-generated />
using System;
using FarmTrack.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FarmTrack.Migrations
{
    [DbContext(typeof(FarmTrackContext))]
    [Migration("20241015165719_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("FarmTrack.Models.Crop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Month")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("TemperatureThreshold")
                        .HasColumnType("REAL");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Crops");

                    b.HasDiscriminator().HasValue("Crop");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("FarmTrack.Models.RealCrop", b =>
                {
                    b.HasBaseType("FarmTrack.Models.Crop");

                    b.Property<DateTime?>("ActualHarvestDate")
                        .HasColumnType("TEXT");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("ExpectedHarvestDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Planting")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("RealCrop");
                });
#pragma warning restore 612, 618
        }
    }
}
