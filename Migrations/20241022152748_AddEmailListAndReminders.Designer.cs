// <auto-generated />
using System;
using FarmTrack.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FarmTrack.Migrations
{
    [DbContext(typeof(FarmTrackContext))]
    [Migration("20241022152748_AddEmailListAndReminders")]
    partial class AddEmailListAndReminders
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("FarmTrack.Models.Crop", b =>
                {
                    b.Property<int>("CropId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CropName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CropType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExpectedHarvestDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FertilizingReminder")
                        .HasColumnType("TEXT");

                    b.Property<int>("GrowthDurationInDays")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("PestControlReminder")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PlantingDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("RequiresFertilizing")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RequiresPestControl")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RequiresWatering")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("WateringReminder")
                        .HasColumnType("TEXT");

                    b.HasKey("CropId");

                    b.ToTable("Crops");
                });

            modelBuilder.Entity("FarmTrack.Models.EmailList", b =>
                {
                    b.Property<int>("EmailListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("EmailListId");

                    b.ToTable("EmailLists");
                });

            modelBuilder.Entity("FarmTrack.Models.GrowthHistory", b =>
                {
                    b.Property<int>("GrowthHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CropId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("TEXT");

                    b.HasKey("GrowthHistoryId");

                    b.HasIndex("CropId");

                    b.ToTable("GrowthHistory");
                });

            modelBuilder.Entity("FarmTrack.Models.Reminder", b =>
                {
                    b.Property<int>("ReminderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CropId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("NotificationSent")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReminderTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReminderType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ReminderId");

                    b.HasIndex("CropId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("FarmTrack.Models.GrowthHistory", b =>
                {
                    b.HasOne("FarmTrack.Models.Crop", "Crop")
                        .WithMany("GrowthHistories")
                        .HasForeignKey("CropId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crop");
                });

            modelBuilder.Entity("FarmTrack.Models.Reminder", b =>
                {
                    b.HasOne("FarmTrack.Models.Crop", "Crop")
                        .WithMany()
                        .HasForeignKey("CropId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crop");
                });

            modelBuilder.Entity("FarmTrack.Models.Crop", b =>
                {
                    b.Navigation("GrowthHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
